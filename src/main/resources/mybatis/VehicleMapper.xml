<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kabuda.dao.VehicleDao">

    <select id="getVehicleCount" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM vehicle
        <if test="_parameter == 1">
            WHERE sell = '1' AND sell_state = '0'
        </if>
        <if test="_parameter == 2">
            WHERE rent = '1' AND rent_state = '0'
        </if>
    </select>


    <select id="getVehicleList" resultType="com.kabuda.entity.domain.VehicleBean">
        SELECT
            vehicle.id AS id,
            user_id AS userId,
            brand.brand_name AS brandName,
            model.model_name AS modelName,
            vehicle.location_code AS locationCode,
            used_hours AS usedHours,
            vehicle_age AS vehicleAge,
            equipment_number AS equipmentNumber,
            description,
            contact,
            contact_phone AS contactPhone,
            tonnage,
            sell AS isSell,
            rent AS isRent,
            sell_state AS sellState,
            rent_state AS rentState,
            sell_price AS sellPrice,
            rent_price AS rentPrice,
            release_date AS releaseDate,
            update_date AS updateDate
        FROM vehicle
        LEFT JOIN model ON vehicle.model_id = model.id
        LEFT JOIN brand ON vehicle.brand_id = brand.id
        LEFT JOIN location ON vehicle.location_code = location.location_code
        WHERE vehicle.brand_id = #{brand} AND vehicle.model_id = #{model}
            AND vehicle.location_code = #{city}
        <if test="sellOrRent == 1">
            AND vehicle.sell = 1 AND vehicle.sell_state = 0
        </if>
        <if test="sellOrRent == 2">
            AND vehicle.rent = 1 AND vehicle.rent_state = 0
        </if>
        <if test="keyword != null">
            AND ((brand.brand_name LIKE CONCAT('%', #{keyword}, '%')) OR (model.model_name LIKE CONCAT('%', #{keyword}, '%')) OR (vehicle.description LIKE CONCAT('%', #{keyword}, '%')))
        </if>
        <if test="sort == 1">
            <if test="sellOrRent == 1"> ORDER BY sell_price ASC </if>
            <if test="sellOrRent == 2"> ORDER BY rent_price ASC </if>
        </if>
        <if test="sort == 2">
            <if test="sellOrRent == 1"> ORDER BY sell_price DESC </if>
            <if test="sellOrRent == 2"> ORDER BY rent_price DESC </if>
        </if>
        <if test="sort == 3">
            ORDER BY used_hours ASC
        </if>
        <if test="sort == 4">
            ORDER BY vehicle_age ASC
        </if>
        LIMIT #{offset}, #{limit}
    </select>


    <select id="getVehicleInfoById" resultType="com.kabuda.entity.domain.VehicleBean">
        SELECT
        vehicle.id AS id,
        user_id AS userId,
        brand.brand_name AS brandName,
        model.model_name AS modelName,
        vehicle.location_code AS locationCode,
        used_hours AS usedHours,
        vehicle_age AS vehicleAge,
        equipment_number AS equipmentNumber,
        description,
        contact,
        contact_phone AS contactPhone,
        tonnage,
        sell AS isSell,
        rent AS isRent,
        sell_state AS sellState,
        rent_state AS rentState,
        sell_price AS sellPrice,
        rent_price AS rentPrice,
        release_date AS releaseDate,
        update_date AS updateDate
        FROM vehicle
        LEFT JOIN model ON vehicle.model_id = model.id
        LEFT JOIN brand ON vehicle.brand_id = brand.id
        LEFT JOIN location ON vehicle.location_code = location.location_code
        WHERE vehicle.id = #{id}
    </select>



    <select id="getVehicleByEN" resultType="java.lang.Integer">
        SELECT id FROM vehicle WHERE equipment_number = #{equipmentNumber}
    </select>

    <select id="getVehicleById" resultType="com.kabuda.entity.Vehicle">
        SELECT
            id,
            user_id AS userId,
            brand_id AS brandId,
            model_id AS modelId,
            location_code AS locationCode,
            used_hours AS usedHours,
            vehicle_age AS vehicleAge,
            equipment_number AS equipmentNumber,
            description,
            contact,
            contact_phone AS contactPhone,
            tonnage,
            sell AS isSell,
            rent AS isRent,
            sell_state AS sellState,
            rent_state AS rentState,
            sell_price AS sellPrice,
            rent_price AS rentPrice,
            release_date AS releaseDate,
            update_date AS updateDate
        FROM vehicle WHERE id = #{id}
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO vehicle
        (user_id, model_id, brand_id, location_code, used_hours, vehicle_age, equipment_number, description, contact,
        contact_phone, tonnage, sell, rent, sell_state, rent_state, sell_price, rent_price, release_date, update_date)
        VALUES
        (#{userId}, #{modelId}, #{brandId}, #{locationCode}, #{usedHours}, #{vehicleAge}, #{equipmentNumber}, #{description},
        #{contact}, #{contactPhone}, #{tonnage}, #{isSell}, #{isRent}, #{sellState}, #{rentState}, #{sellPrice}, #{rentPrice},
        #{releaseDate}, #{updateDate})
    </insert>

    <update id="update">
        UPDATE vehicle SET
            user_id = #{userId},
            model_id = #{modelId},
            brand_id = #{brandId},
            location_code = #{locationCode},
            used_hours = #{usedHours},
            vehicle_age = #{vehicleAge},
            equipment_number = #{equipmentNumber},
            description = #{description},
            contact = #{contact},
            contact_phone = #{contactPhone},
            tonnage = #{tonnage},
            sell = #{isSell},
            rent = #{isRent},
            sell_state = #{sellState},
            rent_state = #{rentState},
            sell_price = #{sellPrice},
            rent_price = #{rentPrice},
            release_date = #{releaseDate},
            update_date = #{updateDate}
        WHERE id = #{id}
    </update>
</mapper>