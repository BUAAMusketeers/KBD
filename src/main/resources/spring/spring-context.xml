<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
       default-lazy-init="true">

    <!-- 加载配置属性文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:kabuda.properties"/>

    <!-- 数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- 指定连接数据库连接池的初始化连接数 -->
        <property name="initialSize" value="15"/>
        <!-- 最大连接数据库连接数 -->
        <!-- <property name="maxActive" value="5" /> --><!-- org.apache.commons.dbcp 属性 -->
        <property name="maxTotal" value="300"/><!-- org.apache.commons.dbcp2 属性 -->
        <!-- 最大等待连接中的数量 -->
        <property name="maxIdle" value="20"/>
        <!-- 最小等待连接中的数量 -->
        <property name="minIdle" value="10"/>
        <property name="connectionProperties" value="defaultNChar=true"/>
    </bean>

    <context:component-scan base-package="com.kabuda.service, com.kabuda.dao"/>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- mybatis配置文件路径 -->
        <!--<property name="configLocation" value=""/>-->
        <!-- 实体类映射文件路径，在开发中映射文件肯定是多个所以使用mybatis/*.xml来替代 -->
        <property name="mapperLocations" value="classpath:mybatis/*.xml"/>
    </bean>

    <!--<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">-->
        <!--<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>-->
    <!--</bean>-->

    <!--动态代理实现 不用写dao的实现 -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="basePackage" value="com.kabuda" />
        <property name="annotationClass" value="com.kabuda.dao.MyBatisDao"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>